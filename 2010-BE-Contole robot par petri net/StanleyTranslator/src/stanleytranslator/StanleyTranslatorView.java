/*
 * StanleyTranslatorView.java
 */

package stanleytranslator;

import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JComboBox;
import javax.swing.DefaultCellEditor;
import javax.swing.*;
import javax.swing.event.*;
import java.lang.*;
import java.awt.Component;
import java.io.*;
import java.util.Vector;
import java.util.regex.*;
/**
 * The application's main frame.
 */


public class StanleyTranslatorView extends FrameView {

    public StanleyTranslatorView(SingleFrameApplication app) {
        super(app);
        ct_model = null;
        initComponents();
     
        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
       

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                  
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                  
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = StanleyTranslatorApp.getApplication().getMainFrame();
            aboutBox = new StanleyTranslatorAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        StanleyTranslatorApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        mainPanel = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        AddConditionjButton = new javax.swing.JButton();
        RemoveConditionjButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TransitionsjList = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        ConditionsjList = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        AttrConditionsjList = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        ActionsjList = new javax.swing.JList();
        jScrollPane5 = new javax.swing.JScrollPane();
        AttrActionsjList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        RemoveCondjButton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        prioSpin = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jResumeTextArea = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        AddActionjButton1 = new javax.swing.JButton();
        RemoveActionjButton1 = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        AddConditionPopup = new javax.swing.JMenuItem();

        mainPanel.setName("mainPanel"); // NOI18N

        jTabbedPane1.setName("jTabbedPane1"); // NOI18N
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });
        jTabbedPane1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jTabbedPane1ComponentHidden(evt);
            }
        });

        jPanel2.setName("jPanel2"); // NOI18N

        jScrollPane6.setName("jScrollPane6"); // NOI18N

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nom", "Capteur", "Valeur"
            }
        ));
        jTable1.setComponentPopupMenu(jPopupMenu1);
        jTable1.setDoubleBuffered(true);
        jTable1.setMinimumSize(new java.awt.Dimension(145, 0));
        jTable1.setName("jTable1"); // NOI18N
        jTable1.setPreferredSize(null);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jScrollPane6.setViewportView(jTable1);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(stanleytranslator.StanleyTranslatorApp.class).getContext().getResourceMap(StanleyTranslatorView.class);
        jTable1.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("jTable1.columnModel.title0")); // NOI18N
        jTable1.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("jTable1.columnModel.title1")); // NOI18N
        jTable1.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("jTable1.columnModel.title2")); // NOI18N
        JComboBox comboBox1 = new JComboBox();
        comboBox1.addItem("Capteur US < (m)");
        comboBox1.addItem("Capteur US > (m)");
        comboBox1.addItem("Capteur Sonore < (dB)");
        comboBox1.addItem("Capteur Sonore > (dB)");
        comboBox1.addItem("Capteur PhotoSensible < (?)");
        comboBox1.addItem("Capteur PhotoSensible > (?)");
        comboBox1.addItem("Capteur Tactile = (bool)");

        jTable1.getColumnModel().getColumn(1).setCellEditor(new DefaultCellEditor(comboBox1));

        AddConditionjButton.setLabel(resourceMap.getString("AddConditionjButton.label")); // NOI18N
        AddConditionjButton.setName("AddConditionjButton"); // NOI18N
        AddConditionjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddConditionjButtonActionPerformed(evt);
            }
        });

        RemoveConditionjButton.setText(resourceMap.getString("RemoveConditionjButton.text")); // NOI18N
        RemoveConditionjButton.setName("RemoveConditionjButton"); // NOI18N
        RemoveConditionjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveConditionjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 1145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(AddConditionjButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RemoveConditionjButton)))
                .addContainerGap(507, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddConditionjButton)
                    .addComponent(RemoveConditionjButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(284, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        TransitionsjList.setName("TransitionsJList"); // NOI18N
        TransitionsjList.getSelectionModel().addListSelectionListener(new MySelListener());
        jScrollPane1.setViewportView(TransitionsjList);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        ConditionsjList.setName("ConditionsJList"); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable1, org.jdesktop.beansbinding.ObjectProperty.create(), ConditionsjList, org.jdesktop.beansbinding.BeanProperty.create("elements"));
        bindingGroup.addBinding(binding);

        jScrollPane2.setViewportView(ConditionsjList);

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        AttrConditionsjList.setName("ConditiosnAttrJlist"); // NOI18N
        jScrollPane3.setViewportView(AttrConditionsjList);

        jScrollPane4.setName("jScrollPane4"); // NOI18N

        ActionsjList.setName("ActionsJList"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable2, org.jdesktop.beansbinding.ObjectProperty.create(), ActionsjList, org.jdesktop.beansbinding.BeanProperty.create("elements"));
        bindingGroup.addBinding(binding);

        jScrollPane4.setViewportView(ActionsjList);

        jScrollPane5.setName("jScrollPane5"); // NOI18N

        AttrActionsjList.setName("ActionsAttrJList"); // NOI18N
        jScrollPane5.setViewportView(AttrActionsjList);

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jButton1.setText(resourceMap.getString("AddConditionButton.text")); // NOI18N
        jButton1.setName("AddConditionButton"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        RemoveCondjButton.setText(resourceMap.getString("RemoveConditionButton.text")); // NOI18N
        RemoveCondjButton.setName("RemoveConditionButton"); // NOI18N
        RemoveCondjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveCondjButtonActionPerformed(evt);
            }
        });

        jButton3.setText(resourceMap.getString("AddActionButton.text")); // NOI18N
        jButton3.setName("AddActionButton"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText(resourceMap.getString("RemoveActionButton.text")); // NOI18N
        jButton4.setName("RemoveActionButton"); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        prioSpin.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        prioSpin.setName("prioSpin"); // NOI18N
        prioSpin.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                prioSpinStateChanged(evt);
            }
        });

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        jScrollPane8.setName("jScrollPane8"); // NOI18N

        jResumeTextArea.setColumns(20);
        jResumeTextArea.setRows(5);
        jResumeTextArea.setName("jResumeTextArea"); // NOI18N
        jScrollPane8.setViewportView(jResumeTextArea);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(32, 32, 32)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jButton1)
                                            .addComponent(RemoveCondjButton)
                                            .addComponent(jButton4)
                                            .addComponent(jButton3)))
                                    .addComponent(jLabel1))
                                .addGap(87, 87, 87))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(95, 95, 95))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(prioSpin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(59, 59, 59))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                                .addComponent(jLabel6)))
                        .addGap(654, 654, 654))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(42, 42, 42)
                                        .addComponent(jButton1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(RemoveCondjButton))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(30, 30, 30)
                                        .addComponent(jButton3)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton4))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE))))
                                .addGap(34, 34, 34)
                                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(157, 157, 157)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(prioSpin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(240, 240, 240))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        jPanel3.setName("jPanel3"); // NOI18N

        jScrollPane7.setName("jScrollPane7"); // NOI18N

        jTable2.setAutoCreateRowSorter(true);
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nom", "Action", "Valeur"
            }
        ));
        jTable2.setComponentPopupMenu(jPopupMenu1);
        jTable2.setName("jTable2"); // NOI18N
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable2MousePressed(evt);
            }
        });
        jScrollPane7.setViewportView(jTable2);
        jTable2.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("jTable1.columnModel.title0")); // NOI18N
        jTable2.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("jTable1.columnModel.title1")); // NOI18N
        jTable2.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("jTable1.columnModel.title2")); // NOI18N
        //JComboBox comboBox1 = new JComboBox();
        //comboBox1.addItem("Capteur US < (m)");
        //comboBox1.addItem("Capteur US > (m)");
        //comboBox1.addItem("Capteur Sonore < (dB)");
        //comboBox1.addItem("Capteur Sonore > (dB)");
        //comboBox1.addItem("Capteur PhotoSensible < (?)");
        //comboBox1.addItem("Capteur PhotoSensible > (?)");
        //comboBox1.addItem("Capteur Tactile = (bool)");

        //jTable2.getColumnModel().getColumn(1).setCellEditor(new DefaultCellEditor(comboBox2));

        AddActionjButton1.setText(resourceMap.getString("AddActionjButton1.text")); // NOI18N
        AddActionjButton1.setName("AddActionjButton1"); // NOI18N
        AddActionjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionjButton1ActionPerformed(evt);
            }
        });

        RemoveActionjButton1.setText(resourceMap.getString("RemoveActionjButton1.text")); // NOI18N
        RemoveActionjButton1.setName("RemoveActionjButton1"); // NOI18N
        RemoveActionjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveActionjButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 1278, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(AddActionjButton1)
                        .addGap(18, 18, 18)
                        .addComponent(RemoveActionjButton1)))
                .addContainerGap(374, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddActionjButton1)
                    .addComponent(RemoveActionjButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(284, 284, 284))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1669, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText(resourceMap.getString("ImporterMenuItem.text")); // NOI18N
        jMenuItem1.setName("ImporterMenuItem"); // NOI18N
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImporterMenuActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText(resourceMap.getString("ExporterMenuItem.text")); // NOI18N
        jMenuItem2.setName("ExporterMenuItem"); // NOI18N
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem2);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(stanleytranslator.StanleyTranslatorApp.class).getContext().getActionMap(StanleyTranslatorView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 1681, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1657, Short.MAX_VALUE)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusMessageLabel)
                    .addComponent(statusAnimationLabel))
                .addGap(3, 3, 3))
        );

        jPopupMenu1.setName("jPopupMenu1"); // NOI18N

        AddConditionPopup.setLabel(resourceMap.getString("AddConditionPopup.label")); // NOI18N
        AddConditionPopup.setName("AddConditionPopup"); // NOI18N
        AddConditionPopup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddConditionPopupActionPerformed(evt);
            }
        });
        jPopupMenu1.add(AddConditionPopup);

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents



    private void jTabbedPane1ComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTabbedPane1ComponentHidden
// TODO add your handling code here:
    }//GEN-LAST:event_jTabbedPane1ComponentHidden

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       if(!(this.TransitionsjList.isSelectionEmpty()) && !(this.ConditionsjList.isSelectionEmpty()))
       {
            net.getTransitions().get(TransitionsjList.getSelectedIndex()).addCondition(net.getConditions().get(ConditionsjList.getSelectedIndex()));
             ConditionListModel mod = (ConditionListModel)this.AttrConditionsjList.getModel();
           mod.fireContentsChanged(mod,0 , 0);
       }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ImporterMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImporterMenuActionPerformed
        // TODO add your handling code here:

        final JFileChooser fc = new JFileChooser();

        int returnVal = fc.showOpenDialog(this.getComponent());
        if (returnVal == JFileChooser.APPROVE_OPTION) {

            File file = fc.getSelectedFile();
            //JOptionPane.showMessageDialog(this.getFrame(), file.getAbsolutePath());
            
            net = Rdp.ReadRdpFile(file.getAbsolutePath());

            if (net ==null) return;

            this.TransitionsjList.setListData(net.getTransitions());

            this.ConditionsjList.setModel(new ConditionListModel(net.getConditions()));
            
            this.ActionsjList.setModel(new ActionListModel(net.getActions()));

            ct_model = new ConditionTableModel(net.getConditions());
            act_model = new ActionTableModel(net.getActions());
            this.jTable1.setModel(ct_model);
            this.jTable2.setModel(act_model);

            JComboBox comboBox1 = new JComboBox();
comboBox1.addItem("Capteur US < (m)");
comboBox1.addItem("Capteur US > (m)");
comboBox1.addItem("Capteur Sonore < (dB)");
comboBox1.addItem("Capteur Sonore > (dB)");
comboBox1.addItem("Capteur PhotoSensible < (?)");
comboBox1.addItem("Capteur PhotoSensible > (?)");
comboBox1.addItem("Capteur Tactile = (bool)");

            JComboBox comboBox2 = new JComboBox();

comboBox2.addItem("Avancer");
comboBox2.addItem("Reculer");
comboBox2.addItem("Tourner à Gauche");
comboBox2.addItem("Tourner à Droite");
comboBox2.addItem("Ouvrir_Pince");
comboBox2.addItem("Fermer_Pince");
comboBox2.addItem("Stop");




jTable1.getColumnModel().getColumn(1).setCellEditor(new DefaultCellEditor(comboBox1)
    {
         public Object getCellEditorValue()
         {
             return ((JComboBox)getComponent()).getSelectedIndex();
         }
         public Component getTableCellEditorComponent(JTable table,Object value,boolean isSelected,int row,int column)
         {
             JComboBox compo = (JComboBox)super.getTableCellEditorComponent(table, value, isSelected, row, column);
             //compo.setSelectedIndex((Integer)value);

             return compo;
         }
                });

jTable2.getColumnModel().getColumn(1).setCellEditor(new DefaultCellEditor(comboBox2)
    {
         public Object getCellEditorValue()
         {
             return ((JComboBox)getComponent()).getSelectedIndex();
         }
         public Component getTableCellEditorComponent(JTable table,Object value,boolean isSelected,int row,int column)
         {
             JComboBox compo = (JComboBox)super.getTableCellEditorComponent(table, value, isSelected, row, column);
             //compo.setSelectedIndex((Integer)value);

             return compo;
         }
                });



        }// End of IF File Found
        else {

            javax.swing.JOptionPane.showMessageDialog(this.getFrame(),"Fichier incorrect","Erreur",javax.swing.JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_ImporterMenuActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        // TODO add your handling code here:
        int sel = jTabbedPane1.getSelectedIndex();
        if(sel == 2)
        {
          
        }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void AddConditionPopupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddConditionPopupActionPerformed
        // TODO add your handling code here:
        net.addCondition(new Condition("C"+String.valueOf(net.getConditions().size()+1)));
        ct_model.fireTableDataChanged();
        ConditionListModel mod = (ConditionListModel)this.ConditionsjList.getModel();
           mod.fireContentsChanged(mod,0 , 0);

    }//GEN-LAST:event_AddConditionPopupActionPerformed

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
        // TODO add your handling code here:
         
        if(evt.isPopupTrigger())
        {
            jTable1.getComponentPopupMenu().show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jTable1MousePressed

    private void AddConditionjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddConditionjButtonActionPerformed
        // TODO add your handling code here:
        if(net==null) {
            javax.swing.JOptionPane.showMessageDialog(this.getComponent(),"Network not loaded", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        else{
        net.addCondition(new Condition("C"+String.valueOf(net.getConditions().size()+1)));
       ct_model.fireTableDataChanged();
       ConditionListModel mod = (ConditionListModel)this.ConditionsjList.getModel();
           mod.fireContentsChanged(mod,0 , 0);
        }
    }//GEN-LAST:event_AddConditionjButtonActionPerformed

    private void RemoveCondjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveCondjButtonActionPerformed
        // TODO add your handling code here:
        if(!this.AttrConditionsjList.isSelectionEmpty())
        {
            ConditionListModel mod = (ConditionListModel)this.AttrConditionsjList.getModel();
            mod.removeAt(this.AttrConditionsjList.getSelectedIndex());
           mod.fireContentsChanged(mod,0 , 0);
        }
    }//GEN-LAST:event_RemoveCondjButtonActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
         final JFileChooser fc = new JFileChooser();

        int returnVal = fc.showSaveDialog(this.getComponent());
        if (returnVal == JFileChooser.APPROVE_OPTION) {

            File file = fc.getSelectedFile();


             try{
    // Create file
    FileWriter fstream = new FileWriter( file.getAbsolutePath());
        BufferedWriter out = new BufferedWriter(fstream);
    out.write(net.toString());
    //Close the output stream
    out.close();
    }catch (Exception e){//Catch exceion if any
      System.err.println("Error: " + e.getMessage());
    }
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void RemoveConditionjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveConditionjButtonActionPerformed
        // TODO add your handling code here:
        if(net==null) {
            javax.swing.JOptionPane.showMessageDialog(this.getComponent(),"Network not loaded", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        else{
        int nblignes = jTable1.getModel().getRowCount();
        for(int i=0; i<nblignes;i++)
        {
            if(jTable1.isCellSelected(i, 0))
            {
                //Integer.parseInt(null)
                String name = net.getConditions().get(i).getName();
               net.getConditions().remove(i);

                 Vector<Transition> trans = net.getTransitions();
               for(int j=0;j< trans.size(); j++)
               {
                   //trans.get(j).getConditions().remove(j);
                   for(int k=0;k< trans.get(j).getConditions().size(); k++)
                    {
                            String cond = trans.get(j).getConditions().get(k).getName();
                          if(cond.compareTo(name)==0)
                          {
                              trans.get(j).getConditions().remove(k);
                              k=-1;
                          }
                   }
               }

               ConditionListModel mod = (ConditionListModel)this.AttrConditionsjList.getModel();
                              mod.fireContentsChanged(mod,0 , 0);

               
            }

        }

       ct_model.fireTableDataChanged();
        }

    }//GEN-LAST:event_RemoveConditionjButtonActionPerformed

    private void prioSpinStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_prioSpinStateChanged
        // TODO add your handling code here:
        int i = this.TransitionsjList.getSelectedIndex();
           if( i != -1)
           {
                net.getTransitions().get(i).SetPriorite((Integer)prioSpin.getModel().getValue());
           }

    }//GEN-LAST:event_prioSpinStateChanged

    private void jTable2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable2MousePressed

    private void AddActionjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionjButton1ActionPerformed
        // TODO add your handling code here:
                if(net==null) {
            javax.swing.JOptionPane.showMessageDialog(this.getComponent(),"Network not loaded", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        else{
       String i = String.valueOf(net.getActions().size()+1);
       net.addAction(new stanleytranslator.Action("A"+i,ActionEnum.AVANCER,"Argument"));
       act_model.fireTableDataChanged();
       ActionListModel mod = (ActionListModel)this.ActionsjList.getModel();
           mod.fireContentsChanged(mod,0 , 0);
        }
    }//GEN-LAST:event_AddActionjButton1ActionPerformed

    private void RemoveActionjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveActionjButton1ActionPerformed
        // TODO add your handling code here:
                if(net==null) {
            javax.swing.JOptionPane.showMessageDialog(this.getComponent(),"Network not loaded", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        else{
        int nblignes = jTable2.getModel().getRowCount();
        for(int i=0; i<nblignes;i++)
        {
            if(jTable2.isCellSelected(i, 0))
            {
                //Integer.parseInt(null)
                String name = net.getActions().get(i).getName();
               net.getActions().remove(i);

                 Vector<Transition> trans = net.getTransitions();
               for(int j=0;j< trans.size(); j++)
               {
                   //trans.get(j).getConditions().remove(j);
                   for(int k=0;k< trans.get(j).getActions().size(); k++)
                    {
                            String act = trans.get(j).getActions().get(k).getName();
                          if(act.compareTo(name)==0)
                          {
                              trans.get(j).getActions().remove(k);
                              k=-1;
                          }
                   }
               }

               ActionListModel modes = (ActionListModel)this.AttrActionsjList.getModel();
               modes.fireContentsChanged(modes,0 , 0);


            }

        }

       act_model.fireTableDataChanged();
    }
    }//GEN-LAST:event_RemoveActionjButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
       if(!(this.TransitionsjList.isSelectionEmpty()) && !(this.ActionsjList.isSelectionEmpty()))
       {
            net.getTransitions().get(TransitionsjList.getSelectedIndex()).addAction(net.getActions().get(ActionsjList.getSelectedIndex()));
             ActionListModel mod = (ActionListModel)this.AttrActionsjList.getModel();
           mod.fireContentsChanged(mod,0 , 0);
       }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if(!this.AttrActionsjList.isSelectionEmpty())
        {
            ActionListModel mod = (ActionListModel)this.AttrActionsjList.getModel();
            mod.removeAt(this.AttrActionsjList.getSelectedIndex());
           mod.fireContentsChanged(mod,0 , 0);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private Rdp net;

  

    private ConditionTableModel ct_model;
    private ActionTableModel act_model;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList ActionsjList;
    private javax.swing.JButton AddActionjButton1;
    private javax.swing.JMenuItem AddConditionPopup;
    private javax.swing.JButton AddConditionjButton;
    private javax.swing.JList AttrActionsjList;
    private javax.swing.JList AttrConditionsjList;
    private javax.swing.JList ConditionsjList;
    private javax.swing.JButton RemoveActionjButton1;
    private javax.swing.JButton RemoveConditionjButton;
    private javax.swing.JButton RemoveCondjButton;
    private javax.swing.JList TransitionsjList;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JTextArea jResumeTextArea;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JSpinner prioSpin;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;
    class MySelListener implements ListSelectionListener {
    public void valueChanged(ListSelectionEvent e) {
       if(!TransitionsjList.isSelectionEmpty())
        {
        int i =  TransitionsjList.getSelectedIndex();
        AttrConditionsjList.setModel(new ConditionListModel(net.getTransitions().get(i).getConditions()));
        AttrActionsjList.setModel(new ActionListModel(net.getTransitions().get(i).getActions()));
        prioSpin.getModel().setValue(net.getTransitions().get(i).getPriorite());

        jResumeTextArea.setText(net.getTransitions().get(i).toFileString());

        }
    }
    }
}

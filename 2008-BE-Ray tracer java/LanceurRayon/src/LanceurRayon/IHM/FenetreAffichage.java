/*
 * FenetreAffichage.java
 *
 * Created on 27 mars 2008, 09:09
 */

package LanceurRayon.IHM;

import LanceurRayon.LanceurRayonApp;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Point;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import org.jdesktop.application.Action;
import sun.awt.image.ToolkitImage;

/**
 *
 * @author  Lecrubier
 */
public class FenetreAffichage extends javax.swing.JFrame {
	
	private Double zoom;
	private ToolkitImage image;
	private Point departDrag;
	private Point departScroll;
	private Point dernierePos;
	Integer largeur;
	Integer hauteur;
	/** Creates new form FenetreAffichage
	 * @param url 
	 */
	public FenetreAffichage(String url) {
		initComponents();
		this.setExtendedState(FenetreAffichage.MAXIMIZED_BOTH);
		image = (ToolkitImage) getToolkit().getImage(url);

		Icon icone = new ImageIcon(image);
		zoneImage.setIcon(icone);
		setZoom(1.);
		zoneImage.setText("");
		zoneImage.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
		Dimension ecran = getToolkit().getScreenSize();
		paneImage.setSize(new Dimension(icone.getIconWidth(),icone.getIconHeight()));
		
		zoomFit();
//		this.setBounds(new Rectangle(ecran.width/2,ecran.height/2,icone.getIconWidth(),icone.getIconHeight()));
		this.setVisible(true);
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        paneOutils = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        boutonZoomFit = new javax.swing.JButton();
        boutonZoomNormal = new javax.swing.JButton();
        boutonZoomIn = new javax.swing.JButton();
        boutonZoomOut = new javax.swing.JButton();
        jToolBar2 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        paneImage = new javax.swing.JPanel();
        zoneDefilable = new javax.swing.JScrollPane();
        zoneImage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(LanceurRayon.LanceurRayonApp.class).getContext().getResourceMap(FenetreAffichage.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setIconImage(LanceurRayonApp.getInstance(LanceurRayon.LanceurRayonApp.class).getContext().getResourceMap(LanceurRayonApp.class).getImageIcon("Application.icon").getImage());
        setName("Form"); // NOI18N

        paneOutils.setName("paneOutils"); // NOI18N

        jToolBar1.setRollover(true);
        jToolBar1.setName("jToolBar1"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(LanceurRayon.LanceurRayonApp.class).getContext().getActionMap(FenetreAffichage.class, this);
        boutonZoomFit.setAction(actionMap.get("zoomFit")); // NOI18N
        boutonZoomFit.setHideActionText(true);
        boutonZoomFit.setName("boutonZoomFit"); // NOI18N
        jToolBar1.add(boutonZoomFit);

        boutonZoomNormal.setAction(actionMap.get("zoomNormal")); // NOI18N
        boutonZoomNormal.setHideActionText(true);
        boutonZoomNormal.setName("boutonZoomNormal"); // NOI18N
        jToolBar1.add(boutonZoomNormal);

        boutonZoomIn.setAction(actionMap.get("zoomPlus")); // NOI18N
        boutonZoomIn.setHideActionText(true);
        boutonZoomIn.setName("boutonZoomIn"); // NOI18N
        jToolBar1.add(boutonZoomIn);

        boutonZoomOut.setAction(actionMap.get("zoomMoins")); // NOI18N
        boutonZoomOut.setHideActionText(true);
        boutonZoomOut.setName("boutonZoomOut"); // NOI18N
        jToolBar1.add(boutonZoomOut);

        jToolBar2.setRollover(true);
        jToolBar2.setName("jToolBar2"); // NOI18N

        jButton1.setAction(actionMap.get("enregistrer")); // NOI18N
        jButton1.setFocusable(false);
        jButton1.setHideActionText(true);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setName("jButton1"); // NOI18N
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(jButton1);

        jButton2.setAction(actionMap.get("ouvrir")); // NOI18N
        jButton2.setFocusable(false);
        jButton2.setHideActionText(true);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setName("jButton2"); // NOI18N
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(jButton2);

        javax.swing.GroupLayout paneOutilsLayout = new javax.swing.GroupLayout(paneOutils);
        paneOutils.setLayout(paneOutilsLayout);
        paneOutilsLayout.setHorizontalGroup(
            paneOutilsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneOutilsLayout.createSequentialGroup()
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(179, Short.MAX_VALUE))
        );
        paneOutilsLayout.setVerticalGroup(
            paneOutilsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
        );

        jSeparator1.setBackground(resourceMap.getColor("jSeparator1.background")); // NOI18N
        jSeparator1.setName("jSeparator1"); // NOI18N

        paneImage.setBackground(resourceMap.getColor("paneImage.background")); // NOI18N
        paneImage.setName("paneImage"); // NOI18N

        zoneDefilable.setBackground(resourceMap.getColor("zoneDefilable.background")); // NOI18N
        zoneDefilable.setBorder(null);
        zoneDefilable.setName("zoneDefilable"); // NOI18N
        zoneDefilable.setWheelScrollingEnabled(false);

        zoneImage.setBackground(resourceMap.getColor("zoneImage.background")); // NOI18N
        zoneImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        zoneImage.setText(resourceMap.getString("zoneImage.text")); // NOI18N
        zoneImage.setName("zoneImage"); // NOI18N
        zoneImage.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                zoomMolette(evt);
            }
        });
        zoneImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                appuiSouris(evt);
            }
        });
        zoneImage.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                deplacementSouris(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                mouvementSouris(evt);
            }
        });
        zoneDefilable.setViewportView(zoneImage);

        javax.swing.GroupLayout paneImageLayout = new javax.swing.GroupLayout(paneImage);
        paneImage.setLayout(paneImageLayout);
        paneImageLayout.setHorizontalGroup(
            paneImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(zoneDefilable, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
        );
        paneImageLayout.setVerticalGroup(
            paneImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(zoneDefilable, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
        );

        zoneDefilable.getAccessibleContext().setAccessibleParent(zoneDefilable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(paneOutils, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
            .addComponent(paneImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(paneOutils, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paneImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void zoomMolette(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_zoomMolette
		Double avant = this.getZoom();
		Double apres = avant * Math.pow(0.8, ((Integer)evt.getWheelRotation()).doubleValue());
//		Integer PX = zoneDefilable.getWidth()/2;
//		Integer PY = zoneDefilable.getHeight()/2;
		Integer PX = dernierePos.x - zoneDefilable.getLocationOnScreen().x;
		Integer PY = dernierePos.y - zoneDefilable.getLocationOnScreen().y;
		Integer Havant = zoneDefilable.getHorizontalScrollBar().getValue()+new Double(PX).intValue();
		Integer Vavant = zoneDefilable.getVerticalScrollBar().getValue()+ new Double(PY).intValue();
		this.setZoom(apres);
		zoneDefilable.getHorizontalScrollBar().setValue(
			new Double(	Havant * apres/avant 	-new Double(PX).intValue() ).intValue()
			);
		zoneDefilable.getVerticalScrollBar().setValue(
			new Double(	Vavant * apres/avant 	-new Double(PY).intValue() ).intValue()
			);
		
	}//GEN-LAST:event_zoomMolette

	private void deplacementSouris(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deplacementSouris
		if(evt.getModifiersEx() == java.awt.event.MouseEvent.BUTTON1_DOWN_MASK) {
			Double PortionX = ((Integer)(departDrag.x-evt.getXOnScreen())).doubleValue();
			Double PortionY = ((Integer)(departDrag.y-evt.getYOnScreen())).doubleValue();
			zoneDefilable.getHorizontalScrollBar().setValue(departScroll.x + PortionX.intValue()); ;
			zoneDefilable.getVerticalScrollBar().setValue(departScroll.y + PortionY.intValue()); ;
		}

	}//GEN-LAST:event_deplacementSouris

	private void appuiSouris(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_appuiSouris
		if(evt.getModifiersEx() == java.awt.event.MouseEvent.BUTTON1_DOWN_MASK) {
			departDrag = evt.getLocationOnScreen();
			departScroll = new Point(zoneDefilable.getHorizontalScrollBar().getValue(),zoneDefilable.getVerticalScrollBar().getValue());
		}
	}//GEN-LAST:event_appuiSouris

	private void mouvementSouris(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouvementSouris
		dernierePos = evt.getLocationOnScreen();
}//GEN-LAST:event_mouvementSouris


	@Action
	public void zoomFit() {
		Double XZ = zoneDefilable.getSize().getWidth();
		Double YZ = zoneDefilable.getSize().getHeight();
		Double XI =((Integer)image.getWidth()).doubleValue();
		Double YI =((Integer)image.getHeight()).doubleValue();
		setZoom(Math.min(XZ/XI, YZ/YI));
	}

	@Action
	public void zoomNormal() {
		setZoom(1.);
	}

	@Action
	public void zoomPlus() {
		setZoom(getZoom() * 2.);
	}

	@Action
	public void zoomMoins() {
		setZoom(getZoom() / 2.);
	}

	public Double getZoom() {
		return zoom;
	}

	public void setZoom(Double zoom) {
		this.zoom = zoom;
		largeur = new Double(image.getWidth()*zoom).intValue();
		hauteur=	new Double(image.getHeight()*zoom).intValue();
		Image imageRedim = image.getScaledInstance(	largeur,hauteur,Image.SCALE_SMOOTH);
		Icon icone = new ImageIcon(imageRedim);
		zoneImage.setSize(largeur,hauteur);
		zoneImage.setIcon(icone);
		org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(LanceurRayon.LanceurRayonApp.class).getContext().getResourceMap(FenetreAffichage.class);
		this.setTitle(resourceMap.getString("Form.title") + " (" + Math.round(zoom.floatValue()*100.) + "%)");
	}

	@Action
	public void enregistrer() {
		JFileChooser chooser = new JFileChooser();
		
		FileFilter filtre = new FileFilter() {

			@Override
			public boolean accept(File f) {
				return f.canRead() && (f.isDirectory() || (f.isFile() && f.getName().endsWith(".png")));
			}

			@Override
			public String getDescription() {
				return "Images PNG (*.png)";
			}
		};
				
		chooser.setAcceptAllFileFilterUsed(false);
		chooser.setFileFilter(filtre);
		
		int returnVal = chooser.showSaveDialog(this);
	
		if(returnVal == JFileChooser.APPROVE_OPTION) {
			try {
				String nomFichier = chooser.getSelectedFile().getPath();
				if (!nomFichier.endsWith(".png")) {
					nomFichier = nomFichier.concat(".png");
				}

				File fichierSortie = new File(nomFichier);
				fichierSortie.createNewFile();

				ImageIO.write(image.getBufferedImage(), "png", fichierSortie);


				Logger.getLogger("Journal").log(Level.INFO, nomFichier + " enregistré");
			} catch (IOException ex) {
				Logger.getLogger(FenetreAffichage.class.getName()).log(Level.SEVERE, null, ex);
			}
		}
		else {
			if(chooser.getSelectedFile()!=null) {
				String nomFichier = chooser.getSelectedFile().getPath();
				Logger.getLogger("Journal").log(Level.SEVERE,null,new Exception("Impossible d'enregistrer " + nomFichier));
			}
		}
	}

	@Action
	public void ouvrir() {
		JFileChooser chooser = new JFileChooser();
		
		FileFilter filtre = new FileFilter() {

			@Override
			public boolean accept(File f) {
				return f.canRead() && (f.isDirectory() || (f.isFile() && f.getName().endsWith(".png")));
			}

			@Override
			public String getDescription() {
				return "Images PNG (*.png)";
			}
		};
				
		chooser.setAcceptAllFileFilterUsed(false);
		chooser.setFileFilter(filtre);
		
		int returnVal = chooser.showOpenDialog(this);
	
		if(returnVal == JFileChooser.APPROVE_OPTION) {
			String nomFichier = chooser.getSelectedFile().getPath();
			
			image = (ToolkitImage) getToolkit().getImage(nomFichier);

			Icon icone = new ImageIcon(image);
			zoneImage.setIcon(icone);
			setZoom(1.);
			
			Logger.getLogger("Journal").log(Level.INFO,nomFichier+ " ouvert");
		}
		else {
			if(chooser.getSelectedFile()!=null) {
				String nomFichier = chooser.getSelectedFile().getPath();
				Logger.getLogger("Journal").log(Level.SEVERE,null,new Exception("Impossible d'ouvrir " + nomFichier));
			}
		}
	}

	@Action
	public void fermer() {
		dispose();
	}
	

	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boutonZoomFit;
    private javax.swing.JButton boutonZoomIn;
    private javax.swing.JButton boutonZoomNormal;
    private javax.swing.JButton boutonZoomOut;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JPanel paneImage;
    private javax.swing.JPanel paneOutils;
    private javax.swing.JScrollPane zoneDefilable;
    private javax.swing.JLabel zoneImage;
    // End of variables declaration//GEN-END:variables
	
}

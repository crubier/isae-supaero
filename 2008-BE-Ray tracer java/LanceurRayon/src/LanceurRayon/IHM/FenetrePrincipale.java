/*
 * FenetrePrincipale.java
 *
 * Created on 5 mars 2008, 13:29
 */

package LanceurRayon.IHM;

import LanceurRayon.IHM.Arbre.JTreeXML;
import LanceurRayon.IHM.Arbre.ArbreXMLModel;
import LanceurRayon.LanceurRayonApp;
import java.awt.AWTEvent;
import java.awt.Toolkit;
import java.awt.event.AWTEventListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JEditorPane;
import javax.swing.JFrame;
import javax.swing.JTabbedPane;

/**
 *
 * @author  Lecrubier
 */
public class FenetrePrincipale extends javax.swing.JFrame {
	
	BufferedImage icone;

	public FenetrePrincipale() {
		// Listener de mouvement de souris dans la fenetre, affiche le tooltiptext associé au composant dans le label en bas a gauche
		Toolkit.getDefaultToolkit().addAWTEventListener( new AWTEventListener()
		{
			public void eventDispatched(AWTEvent e)
			{
				if(e.getSource() instanceof JComponent) {
					if(((JComponent)e.getSource()).getToolTipText()!=null) {
						TexteAstuce.setText(((JComponent)e.getSource()).getToolTipText());
//						LanceurRayon.LanceurRayonApp.getApplication().getInstance().

					}
					else {
						TexteAstuce.setText("");
					}
				}
			}

		}, AWTEvent.MOUSE_MOTION_EVENT_MASK + AWTEvent.MOUSE_EVENT_MASK);
		//j'en suis très fier !

		initComponents();
		setExtendedState(JFrame.MAXIMIZED_BOTH);
	}
	
	
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        PanelOutils = new javax.swing.JPanel();
        BarreFichier = new javax.swing.JToolBar();
        BoutonNouveau = new javax.swing.JButton();
        BoutonOuvrir = new javax.swing.JButton();
        BoutonEnregistrer = new javax.swing.JButton();
        BoutonEnregistrerSous = new javax.swing.JButton();
        BoutonProprietes = new javax.swing.JButton();
        BarreEdition = new javax.swing.JToolBar();
        BoutonCouper = new javax.swing.JButton();
        BoutonColler = new javax.swing.JButton();
        BoutonAnnuler = new javax.swing.JButton();
        BoutonRestaurer = new javax.swing.JButton();
        BarreInsertion = new javax.swing.JToolBar();
        BoutonSelecteurCouleur = new javax.swing.JButton();
        BoutonSelecteurMateriau = new javax.swing.JButton();
        BoutonSelecteurVecteur = new javax.swing.JButton();
        BoutonSelecteurFichier = new javax.swing.JButton();
        BarreOutils = new javax.swing.JToolBar();
        BoutonCalcul = new javax.swing.JButton();
        BoutonAffichage = new javax.swing.JButton();
        BoutonPreferences = new javax.swing.JButton();
        SeparateurOutils = new javax.swing.JSeparator();
        PanelPrincipal = new javax.swing.JPanel();
        PanelOnglets = new javax.swing.JTabbedPane();
        SeparateurEtat = new javax.swing.JSeparator();
        PanelEtat = new javax.swing.JPanel();
        TexteEtat = new javax.swing.JLabel();
        BarreProgression = new javax.swing.JProgressBar();
        TexteAstuce = new javax.swing.JLabel();
        BarreMenu = new javax.swing.JMenuBar();
        MenuFichier = new javax.swing.JMenu();
        ItemNouveau = new javax.swing.JMenuItem();
        Separateur1 = new javax.swing.JSeparator();
        ItemOuvrir = new javax.swing.JMenuItem();
        ItemFermer = new javax.swing.JMenuItem();
        ItemEnregistrer = new javax.swing.JMenuItem();
        ItemEnregistrerSous = new javax.swing.JMenuItem();
        Separateur2 = new javax.swing.JSeparator();
        ItemProprietes = new javax.swing.JMenuItem();
        Separateur3 = new javax.swing.JSeparator();
        ItemQuitter = new javax.swing.JMenuItem();
        MenuEdition = new javax.swing.JMenu();
        ItemAnnuler = new javax.swing.JMenuItem();
        ItemRestaurer = new javax.swing.JMenuItem();
        ItemRafraichir = new javax.swing.JMenuItem();
        Separateur4 = new javax.swing.JSeparator();
        ItemCouper = new javax.swing.JMenuItem();
        ItemCopier = new javax.swing.JMenuItem();
        ItemColler = new javax.swing.JMenuItem();
        ItemSupprimer = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        jMenuItem6 = new javax.swing.JMenuItem();
        ItemSelectionnerTout = new javax.swing.JMenuItem();
        Separateur5 = new javax.swing.JSeparator();
        ItemRechercher = new javax.swing.JMenuItem();
        ItemRemplacer = new javax.swing.JMenuItem();
        MenuInsertion = new javax.swing.JMenu();
        ItemSelecteurCouleur = new javax.swing.JMenuItem();
        ItemSelecteurMateriau = new javax.swing.JMenuItem();
        ItemSelecteurVecteur = new javax.swing.JMenuItem();
        ItemSelecteurFichier = new javax.swing.JMenuItem();
        MenuOutils = new javax.swing.JMenu();
        ItemCalcul = new javax.swing.JMenuItem();
        ItemAffichage = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        Separateur6 = new javax.swing.JSeparator();
        ItemPreferences = new javax.swing.JMenuItem();
        MenuAide = new javax.swing.JMenu();
        ItemAide = new javax.swing.JMenuItem();
        Separateur7 = new javax.swing.JSeparator();
        ItemAPropos = new javax.swing.JMenuItem();

        jPopupMenu1.setName("jPopupMenu1"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(LanceurRayon.LanceurRayonApp.class).getContext().getActionMap(FenetrePrincipale.class, this);
        jMenuItem2.setAction(actionMap.get("nouveau")); // NOI18N
        jMenuItem2.setName("jMenuItem2"); // NOI18N
        jPopupMenu1.add(jMenuItem2);

        jMenuItem3.setAction(actionMap.get("fermer")); // NOI18N
        jMenuItem3.setName("jMenuItem3"); // NOI18N
        jPopupMenu1.add(jMenuItem3);

        jMenuItem4.setAction(actionMap.get("ouvrir")); // NOI18N
        jMenuItem4.setName("jMenuItem4"); // NOI18N
        jPopupMenu1.add(jMenuItem4);

        jMenuItem5.setAction(actionMap.get("enregistrer")); // NOI18N
        jMenuItem5.setName("jMenuItem5"); // NOI18N
        jPopupMenu1.add(jMenuItem5);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(LanceurRayon.LanceurRayonApp.class).getContext().getResourceMap(FenetrePrincipale.class);
        setTitle(resourceMap.getString("FenetrePrincipale.title")); // NOI18N
        setBounds(new java.awt.Rectangle(0, 0, 800, 600));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setExtendedState(JFrame.NORMAL);
        setIconImage(LanceurRayonApp.getInstance(LanceurRayon.LanceurRayonApp.class).getContext().getResourceMap(LanceurRayonApp.class).getImageIcon("Application.icon").getImage());
        setMaximizedBounds(new java.awt.Rectangle(java.awt.Toolkit.getDefaultToolkit().getScreenSize()));
        setMinimumSize(new java.awt.Dimension(400, 300));
        setName("FenetrePrincipale"); // NOI18N

        PanelOutils.setBackground(resourceMap.getColor("PanelOutils.background")); // NOI18N
        PanelOutils.setName("PanelOutils"); // NOI18N

        BarreFichier.setRollover(true);
        BarreFichier.setName("BarreFichier"); // NOI18N

        BoutonNouveau.setAction(actionMap.get("nouveau")); // NOI18N
        BoutonNouveau.setFocusable(false);
        BoutonNouveau.setHideActionText(true);
        BoutonNouveau.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BoutonNouveau.setName("BoutonNouveau"); // NOI18N
        BoutonNouveau.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BarreFichier.add(BoutonNouveau);

        BoutonOuvrir.setAction(actionMap.get("ouvrir")); // NOI18N
        BoutonOuvrir.setFocusable(false);
        BoutonOuvrir.setHideActionText(true);
        BoutonOuvrir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BoutonOuvrir.setName("BoutonOuvrir"); // NOI18N
        BoutonOuvrir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BarreFichier.add(BoutonOuvrir);

        BoutonEnregistrer.setAction(actionMap.get("enregistrer")); // NOI18N
        BoutonEnregistrer.setFocusable(false);
        BoutonEnregistrer.setHideActionText(true);
        BoutonEnregistrer.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BoutonEnregistrer.setName("BoutonEnregistrer"); // NOI18N
        BoutonEnregistrer.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BarreFichier.add(BoutonEnregistrer);

        BoutonEnregistrerSous.setAction(actionMap.get("enregistrerSous")); // NOI18N
        BoutonEnregistrerSous.setFocusable(false);
        BoutonEnregistrerSous.setHideActionText(true);
        BoutonEnregistrerSous.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BoutonEnregistrerSous.setName("BoutonEnregistrerSous"); // NOI18N
        BoutonEnregistrerSous.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BarreFichier.add(BoutonEnregistrerSous);

        BoutonProprietes.setAction(actionMap.get("proprietes")); // NOI18N
        BoutonProprietes.setFocusable(false);
        BoutonProprietes.setHideActionText(true);
        BoutonProprietes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BoutonProprietes.setName("BoutonProprietes"); // NOI18N
        BoutonProprietes.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BarreFichier.add(BoutonProprietes);

        BarreEdition.setRollover(true);
        BarreEdition.setName("BarreEdition"); // NOI18N

        BoutonCouper.setAction(actionMap.get("couper")); // NOI18N
        BoutonCouper.setFocusable(false);
        BoutonCouper.setHideActionText(true);
        BoutonCouper.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BoutonCouper.setName("BoutonCouper"); // NOI18N
        BoutonCouper.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BarreEdition.add(BoutonCouper);

        BoutonColler.setAction(actionMap.get("coller")); // NOI18N
        BoutonColler.setFocusable(false);
        BoutonColler.setHideActionText(true);
        BoutonColler.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BoutonColler.setName("BoutonColler"); // NOI18N
        BoutonColler.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BarreEdition.add(BoutonColler);

        BoutonAnnuler.setAction(actionMap.get("annuler")); // NOI18N
        BoutonAnnuler.setFocusable(false);
        BoutonAnnuler.setHideActionText(true);
        BoutonAnnuler.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BoutonAnnuler.setName("BoutonAnnuler"); // NOI18N
        BoutonAnnuler.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BarreEdition.add(BoutonAnnuler);

        BoutonRestaurer.setAction(actionMap.get("restaurer")); // NOI18N
        BoutonRestaurer.setFocusable(false);
        BoutonRestaurer.setHideActionText(true);
        BoutonRestaurer.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BoutonRestaurer.setName("BoutonRestaurer"); // NOI18N
        BoutonRestaurer.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BarreEdition.add(BoutonRestaurer);

        BarreInsertion.setRollover(true);
        BarreInsertion.setName("BarreInsertion"); // NOI18N

        BoutonSelecteurCouleur.setAction(actionMap.get("selecteurCouleur")); // NOI18N
        BoutonSelecteurCouleur.setFocusable(false);
        BoutonSelecteurCouleur.setHideActionText(true);
        BoutonSelecteurCouleur.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BoutonSelecteurCouleur.setName("BoutonSelecteurCouleur"); // NOI18N
        BoutonSelecteurCouleur.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BarreInsertion.add(BoutonSelecteurCouleur);

        BoutonSelecteurMateriau.setAction(actionMap.get("selecteurMateriau")); // NOI18N
        BoutonSelecteurMateriau.setFocusable(false);
        BoutonSelecteurMateriau.setHideActionText(true);
        BoutonSelecteurMateriau.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BoutonSelecteurMateriau.setName("BoutonSelecteurMateriau"); // NOI18N
        BoutonSelecteurMateriau.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BarreInsertion.add(BoutonSelecteurMateriau);

        BoutonSelecteurVecteur.setAction(actionMap.get("selecteurVecteur")); // NOI18N
        BoutonSelecteurVecteur.setFocusable(false);
        BoutonSelecteurVecteur.setHideActionText(true);
        BoutonSelecteurVecteur.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BoutonSelecteurVecteur.setName("BoutonSelecteurVecteur"); // NOI18N
        BoutonSelecteurVecteur.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BarreInsertion.add(BoutonSelecteurVecteur);

        BoutonSelecteurFichier.setAction(actionMap.get("selecteurFichier")); // NOI18N
        BoutonSelecteurFichier.setFocusable(false);
        BoutonSelecteurFichier.setHideActionText(true);
        BoutonSelecteurFichier.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BoutonSelecteurFichier.setName("BoutonSelecteurFichier"); // NOI18N
        BoutonSelecteurFichier.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BarreInsertion.add(BoutonSelecteurFichier);

        BarreOutils.setRollover(true);
        BarreOutils.setName("BarreOutils"); // NOI18N

        BoutonCalcul.setAction(actionMap.get("calculerRendu")); // NOI18N
        BoutonCalcul.setFocusable(false);
        BoutonCalcul.setHideActionText(true);
        BoutonCalcul.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BoutonCalcul.setName("BoutonCalcul"); // NOI18N
        BoutonCalcul.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BarreOutils.add(BoutonCalcul);

        BoutonAffichage.setAction(actionMap.get("afficherImage")); // NOI18N
        BoutonAffichage.setFocusable(false);
        BoutonAffichage.setHideActionText(true);
        BoutonAffichage.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BoutonAffichage.setName("BoutonAffichage"); // NOI18N
        BoutonAffichage.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BarreOutils.add(BoutonAffichage);

        BoutonPreferences.setAction(actionMap.get("preferences")); // NOI18N
        BoutonPreferences.setFocusable(false);
        BoutonPreferences.setHideActionText(true);
        BoutonPreferences.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BoutonPreferences.setName("BoutonPreferences"); // NOI18N
        BoutonPreferences.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BarreOutils.add(BoutonPreferences);

        javax.swing.GroupLayout PanelOutilsLayout = new javax.swing.GroupLayout(PanelOutils);
        PanelOutils.setLayout(PanelOutilsLayout);
        PanelOutilsLayout.setHorizontalGroup(
            PanelOutilsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelOutilsLayout.createSequentialGroup()
                .addComponent(BarreFichier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BarreEdition, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BarreInsertion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BarreOutils, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
        );
        PanelOutilsLayout.setVerticalGroup(
            PanelOutilsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BarreFichier, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
            .addComponent(BarreEdition, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
            .addComponent(BarreInsertion, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
            .addComponent(BarreOutils, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
        );

        SeparateurOutils.setBackground(resourceMap.getColor("SeparateurOutils.background")); // NOI18N
        SeparateurOutils.setName("SeparateurOutils"); // NOI18N

        PanelPrincipal.setBackground(resourceMap.getColor("PanelPrincipal.background")); // NOI18N
        PanelPrincipal.setName("PanelPrincipal"); // NOI18N

        PanelOnglets.setComponentPopupMenu(jPopupMenu1);
        PanelOnglets.setName("PanelOnglets"); // NOI18N

        javax.swing.GroupLayout PanelPrincipalLayout = new javax.swing.GroupLayout(PanelPrincipal);
        PanelPrincipal.setLayout(PanelPrincipalLayout);
        PanelPrincipalLayout.setHorizontalGroup(
            PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelOnglets, javax.swing.GroupLayout.DEFAULT_SIZE, 833, Short.MAX_VALUE)
        );
        PanelPrincipalLayout.setVerticalGroup(
            PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelOnglets, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
        );

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("LanceurRayon/resources/LanceurRayonApp"); // NOI18N
        PanelOnglets.getAccessibleContext().setAccessibleDescription(bundle.getString("aide.Action.shortDescription")); // NOI18N

        SeparateurEtat.setName("SeparateurEtat"); // NOI18N

        PanelEtat.setBackground(resourceMap.getColor("PanelEtat.background")); // NOI18N
        PanelEtat.setName("PanelEtat"); // NOI18N

        TexteEtat.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        TexteEtat.setText(resourceMap.getString("TexteEtat.text")); // NOI18N
        TexteEtat.setToolTipText(resourceMap.getString("TexteEtat.toolTipText")); // NOI18N
        TexteEtat.setName("TexteEtat"); // NOI18N

        BarreProgression.setToolTipText(resourceMap.getString("BarreProgression.toolTipText")); // NOI18N
        BarreProgression.setName("BarreProgression"); // NOI18N
        BarreProgression.setStringPainted(true);

        TexteAstuce.setText(resourceMap.getString("TexteAstuce.text")); // NOI18N
        TexteAstuce.setName("TexteAstuce"); // NOI18N

        javax.swing.GroupLayout PanelEtatLayout = new javax.swing.GroupLayout(PanelEtat);
        PanelEtat.setLayout(PanelEtatLayout);
        PanelEtatLayout.setHorizontalGroup(
            PanelEtatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelEtatLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TexteAstuce, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TexteEtat, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BarreProgression, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PanelEtatLayout.setVerticalGroup(
            PanelEtatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelEtatLayout.createSequentialGroup()
                .addGroup(PanelEtatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BarreProgression, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TexteAstuce)
                    .addComponent(TexteEtat))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        BarreMenu.setName("BarreMenu"); // NOI18N

        MenuFichier.setMnemonic('f');
        MenuFichier.setText(resourceMap.getString("MenuFichier.text")); // NOI18N
        MenuFichier.setToolTipText(resourceMap.getString("MenuFichier.toolTipText")); // NOI18N
        MenuFichier.setName("MenuFichier"); // NOI18N

        ItemNouveau.setAction(actionMap.get("nouveau")); // NOI18N
        ItemNouveau.setName("ItemNouveau"); // NOI18N
        MenuFichier.add(ItemNouveau);

        Separateur1.setName("Separateur1"); // NOI18N
        MenuFichier.add(Separateur1);

        ItemOuvrir.setAction(actionMap.get("ouvrir")); // NOI18N
        ItemOuvrir.setName("ItemOuvrir"); // NOI18N
        MenuFichier.add(ItemOuvrir);

        ItemFermer.setAction(actionMap.get("fermer")); // NOI18N
        ItemFermer.setName("ItemFermer"); // NOI18N
        MenuFichier.add(ItemFermer);

        ItemEnregistrer.setAction(actionMap.get("enregistrer")); // NOI18N
        ItemEnregistrer.setName("ItemEnregistrer"); // NOI18N
        MenuFichier.add(ItemEnregistrer);

        ItemEnregistrerSous.setAction(actionMap.get("enregistrerSous")); // NOI18N
        ItemEnregistrerSous.setName("ItemEnregistrerSous"); // NOI18N
        MenuFichier.add(ItemEnregistrerSous);

        Separateur2.setName("Separateur2"); // NOI18N
        MenuFichier.add(Separateur2);

        ItemProprietes.setAction(actionMap.get("proprietes")); // NOI18N
        ItemProprietes.setName("ItemProprietes"); // NOI18N
        MenuFichier.add(ItemProprietes);

        Separateur3.setName("Separateur3"); // NOI18N
        MenuFichier.add(Separateur3);

        ItemQuitter.setAction(actionMap.get("quit")); // NOI18N
        ItemQuitter.setName("ItemQuitter"); // NOI18N
        ItemQuitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemQuitterActionPerformed(evt);
            }
        });
        MenuFichier.add(ItemQuitter);

        BarreMenu.add(MenuFichier);

        MenuEdition.setMnemonic('e');
        MenuEdition.setText(resourceMap.getString("MenuEdition.text")); // NOI18N
        MenuEdition.setToolTipText(resourceMap.getString("MenuEdition.toolTipText")); // NOI18N
        MenuEdition.setName("MenuEdition"); // NOI18N

        ItemAnnuler.setAction(actionMap.get("annuler")); // NOI18N
        ItemAnnuler.setName("ItemAnnuler"); // NOI18N
        MenuEdition.add(ItemAnnuler);

        ItemRestaurer.setAction(actionMap.get("restaurer")); // NOI18N
        ItemRestaurer.setName("ItemRestaurer"); // NOI18N
        MenuEdition.add(ItemRestaurer);

        ItemRafraichir.setAction(actionMap.get("rafraichir")); // NOI18N
        ItemRafraichir.setName("ItemRafraichir"); // NOI18N
        MenuEdition.add(ItemRafraichir);

        Separateur4.setName("Separateur4"); // NOI18N
        MenuEdition.add(Separateur4);

        ItemCouper.setAction(actionMap.get("couper")); // NOI18N
        ItemCouper.setName("ItemCouper"); // NOI18N
        MenuEdition.add(ItemCouper);

        ItemCopier.setAction(actionMap.get("copier")); // NOI18N
        ItemCopier.setName("ItemCopier"); // NOI18N
        MenuEdition.add(ItemCopier);

        ItemColler.setAction(actionMap.get("coller")); // NOI18N
        ItemColler.setName("ItemColler"); // NOI18N
        MenuEdition.add(ItemColler);

        ItemSupprimer.setAction(actionMap.get("supprimer")); // NOI18N
        ItemSupprimer.setName("ItemSupprimer"); // NOI18N
        MenuEdition.add(ItemSupprimer);

        jSeparator1.setName("jSeparator1"); // NOI18N
        MenuEdition.add(jSeparator1);

        jMenuItem6.setAction(actionMap.get("editer")); // NOI18N
        jMenuItem6.setName("jMenuItem6"); // NOI18N
        MenuEdition.add(jMenuItem6);

        ItemSelectionnerTout.setAction(actionMap.get("selectionnerTout")); // NOI18N
        ItemSelectionnerTout.setName("ItemSelectionnerTout"); // NOI18N
        MenuEdition.add(ItemSelectionnerTout);

        Separateur5.setName("Separateur5"); // NOI18N
        MenuEdition.add(Separateur5);

        ItemRechercher.setAction(actionMap.get("rechercher")); // NOI18N
        ItemRechercher.setName("ItemRechercher"); // NOI18N
        MenuEdition.add(ItemRechercher);

        ItemRemplacer.setAction(actionMap.get("remplacer")); // NOI18N
        ItemRemplacer.setName("ItemRemplacer"); // NOI18N
        MenuEdition.add(ItemRemplacer);

        BarreMenu.add(MenuEdition);

        MenuInsertion.setMnemonic('i');
        MenuInsertion.setText(resourceMap.getString("MenuInsertion.text")); // NOI18N
        MenuInsertion.setToolTipText(resourceMap.getString("MenuInsertion.toolTipText")); // NOI18N
        MenuInsertion.setName("MenuInsertion"); // NOI18N

        ItemSelecteurCouleur.setAction(actionMap.get("selecteurCouleur")); // NOI18N
        ItemSelecteurCouleur.setName("ItemSelecteurCouleur"); // NOI18N
        MenuInsertion.add(ItemSelecteurCouleur);

        ItemSelecteurMateriau.setAction(actionMap.get("selecteurMateriau")); // NOI18N
        ItemSelecteurMateriau.setName("ItemSelecteurMateriau"); // NOI18N
        MenuInsertion.add(ItemSelecteurMateriau);

        ItemSelecteurVecteur.setAction(actionMap.get("selecteurVecteur")); // NOI18N
        ItemSelecteurVecteur.setName("ItemSelecteurVecteur"); // NOI18N
        MenuInsertion.add(ItemSelecteurVecteur);

        ItemSelecteurFichier.setAction(actionMap.get("selecteurFichier")); // NOI18N
        ItemSelecteurFichier.setName("ItemSelecteurFichier"); // NOI18N
        MenuInsertion.add(ItemSelecteurFichier);

        BarreMenu.add(MenuInsertion);

        MenuOutils.setMnemonic('o');
        MenuOutils.setText(resourceMap.getString("MenuOutils.text")); // NOI18N
        MenuOutils.setToolTipText(resourceMap.getString("MenuOutils.toolTipText")); // NOI18N
        MenuOutils.setName("MenuOutils"); // NOI18N

        ItemCalcul.setAction(actionMap.get("calculerRendu")); // NOI18N
        ItemCalcul.setName("ItemCalcul"); // NOI18N
        MenuOutils.add(ItemCalcul);

        ItemAffichage.setAction(actionMap.get("afficherImage")); // NOI18N
        ItemAffichage.setName("ItemAffichage"); // NOI18N
        MenuOutils.add(ItemAffichage);

        jMenuItem1.setAction(actionMap.get("afficherJournal")); // NOI18N
        jMenuItem1.setName("jMenuItem1"); // NOI18N
        MenuOutils.add(jMenuItem1);

        Separateur6.setName("Separateur6"); // NOI18N
        MenuOutils.add(Separateur6);

        ItemPreferences.setAction(actionMap.get("preferences")); // NOI18N
        ItemPreferences.setName("ItemPreferences"); // NOI18N
        MenuOutils.add(ItemPreferences);

        BarreMenu.add(MenuOutils);

        MenuAide.setMnemonic('a');
        MenuAide.setText(resourceMap.getString("MenuAide.text")); // NOI18N
        MenuAide.setToolTipText(resourceMap.getString("MenuAide.toolTipText")); // NOI18N
        MenuAide.setName("MenuAide"); // NOI18N

        ItemAide.setAction(actionMap.get("aide")); // NOI18N
        ItemAide.setName("ItemAide"); // NOI18N
        MenuAide.add(ItemAide);

        Separateur7.setName("Separateur7"); // NOI18N
        MenuAide.add(Separateur7);

        ItemAPropos.setAction(actionMap.get("aPropos")); // NOI18N
        ItemAPropos.setName("ItemAPropos"); // NOI18N
        MenuAide.add(ItemAPropos);

        BarreMenu.add(MenuAide);

        setJMenuBar(BarreMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelEtat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(SeparateurEtat, javax.swing.GroupLayout.DEFAULT_SIZE, 833, Short.MAX_VALUE)
            .addComponent(PanelOutils, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(SeparateurOutils, javax.swing.GroupLayout.DEFAULT_SIZE, 833, Short.MAX_VALUE)
            .addComponent(PanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PanelOutils, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SeparateurOutils, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SeparateurEtat, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelEtat, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
	
	private void ItemQuitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemQuitterActionPerformed
		System.exit(0);
}//GEN-LAST:event_ItemQuitterActionPerformed
	
	

	public JEditorPane getEditeurTexte() {

	return	((JSplitPaneXML)(this.PanelOnglets)	.getSelectedComponent()).getEditeurTexte();

	}
	
	public JTreeXML getEditeurArbre() {
		return	((JSplitPaneXML)(this.PanelOnglets)	.getSelectedComponent()).getEditeurArbre();
	}

	public JSplitPaneXML getEditeur() {
		return	((JSplitPaneXML)(this.PanelOnglets)	.getSelectedComponent());
	}

	public JTabbedPane getPanelOnglets() {
		return PanelOnglets;
	}
	
	public void refreshEditeurArbre() {
		getEditeurArbre().getModel().fromString(getEditeurTexte().getText());
		getEditeurArbre().updateUI();
	}
	
	public void refreshEditeurTexte() {

		getEditeurTexte().setText(getEditeurArbre().getModel().toString());
		getEditeurTexte().updateUI();
	}

	public void addProjet(ArbreXMLModel doc,File fichier) {
		if(fichier!=null) {
			PanelOnglets.setName("PanelOnglets"); 
			JSplitPaneXML editeur = new JSplitPaneXML(this,doc,fichier);
			PanelOnglets.addTab(fichier.getName(), editeur);
			PanelOnglets.setSelectedComponent(editeur);
			Logger.getLogger("Journal").log(Level.INFO,"Projet créé");
		} 
		else {
			PanelOnglets.setName("PanelOnglets"); 
			JSplitPaneXML editeur = new JSplitPaneXML(this,doc,fichier);
			PanelOnglets.addTab("SansTitre.xml", editeur);
			PanelOnglets.setSelectedComponent(editeur);
			Logger.getLogger("Journal").log(Level.INFO,"Projet créé");
		}
	}
	
	public void removeProjet() {
		this.PanelOnglets.removeTabAt(this.PanelOnglets.getSelectedIndex());
		Logger.getLogger("Journal").log(Level.INFO,"Projet supprimé");
	}
	
	public void setProgression(int Progression, String str) {
		BarreProgression.setValue(Progression);
		BarreProgression.setString(str);
	}
		
	public void setProgression(int Progression) {
		BarreProgression.setValue(Progression);
		BarreProgression.setString(Progression+"%");
		this.setTitle("LanceurRayon - " + Progression+"%");
	}
	
	public void setEtat(String str) {
		TexteEtat.setText(str);
	}
	
	public void resetEtat() {
		TexteEtat.setText("Pret");
		BarreProgression.setValue(0);
		BarreProgression.setString(" ");
		this.setTitle("LanceurRayon");
	}
	
	

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToolBar BarreEdition;
    private javax.swing.JToolBar BarreFichier;
    private javax.swing.JToolBar BarreInsertion;
    private javax.swing.JMenuBar BarreMenu;
    private javax.swing.JToolBar BarreOutils;
    private javax.swing.JProgressBar BarreProgression;
    private javax.swing.JButton BoutonAffichage;
    private javax.swing.JButton BoutonAnnuler;
    private javax.swing.JButton BoutonCalcul;
    private javax.swing.JButton BoutonColler;
    private javax.swing.JButton BoutonCouper;
    private javax.swing.JButton BoutonEnregistrer;
    private javax.swing.JButton BoutonEnregistrerSous;
    private javax.swing.JButton BoutonNouveau;
    private javax.swing.JButton BoutonOuvrir;
    private javax.swing.JButton BoutonPreferences;
    private javax.swing.JButton BoutonProprietes;
    private javax.swing.JButton BoutonRestaurer;
    private javax.swing.JButton BoutonSelecteurCouleur;
    private javax.swing.JButton BoutonSelecteurFichier;
    private javax.swing.JButton BoutonSelecteurMateriau;
    private javax.swing.JButton BoutonSelecteurVecteur;
    private javax.swing.JMenuItem ItemAPropos;
    private javax.swing.JMenuItem ItemAffichage;
    private javax.swing.JMenuItem ItemAide;
    private javax.swing.JMenuItem ItemAnnuler;
    private javax.swing.JMenuItem ItemCalcul;
    private javax.swing.JMenuItem ItemColler;
    private javax.swing.JMenuItem ItemCopier;
    private javax.swing.JMenuItem ItemCouper;
    private javax.swing.JMenuItem ItemEnregistrer;
    private javax.swing.JMenuItem ItemEnregistrerSous;
    private javax.swing.JMenuItem ItemFermer;
    private javax.swing.JMenuItem ItemNouveau;
    private javax.swing.JMenuItem ItemOuvrir;
    private javax.swing.JMenuItem ItemPreferences;
    private javax.swing.JMenuItem ItemProprietes;
    private javax.swing.JMenuItem ItemQuitter;
    private javax.swing.JMenuItem ItemRafraichir;
    private javax.swing.JMenuItem ItemRechercher;
    private javax.swing.JMenuItem ItemRemplacer;
    private javax.swing.JMenuItem ItemRestaurer;
    private javax.swing.JMenuItem ItemSelecteurCouleur;
    private javax.swing.JMenuItem ItemSelecteurFichier;
    private javax.swing.JMenuItem ItemSelecteurMateriau;
    private javax.swing.JMenuItem ItemSelecteurVecteur;
    private javax.swing.JMenuItem ItemSelectionnerTout;
    private javax.swing.JMenuItem ItemSupprimer;
    private javax.swing.JMenu MenuAide;
    private javax.swing.JMenu MenuEdition;
    private javax.swing.JMenu MenuFichier;
    private javax.swing.JMenu MenuInsertion;
    private javax.swing.JMenu MenuOutils;
    private javax.swing.JPanel PanelEtat;
    private javax.swing.JTabbedPane PanelOnglets;
    private javax.swing.JPanel PanelOutils;
    private javax.swing.JPanel PanelPrincipal;
    private javax.swing.JSeparator Separateur1;
    private javax.swing.JSeparator Separateur2;
    private javax.swing.JSeparator Separateur3;
    private javax.swing.JSeparator Separateur4;
    private javax.swing.JSeparator Separateur5;
    private javax.swing.JSeparator Separateur6;
    private javax.swing.JSeparator Separateur7;
    private javax.swing.JSeparator SeparateurEtat;
    private javax.swing.JSeparator SeparateurOutils;
    private javax.swing.JLabel TexteAstuce;
    private javax.swing.JLabel TexteEtat;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables

	
}
